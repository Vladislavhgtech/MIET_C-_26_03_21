# Лабораторная работа 2

### Без дополнительного задания

Наследование. Исключения. Интерфейсы.
Итераторы и блоки итераторов
Информация для всех вариантов


## В классе Person из лабораторной работы 1 и в классах, дополнительно указанных в вариантах, надо

- переопределить (override) виртуальный метод bool Equals (object obj);
- определить операции == и != ;
- переопределить виртуальный метод int GetHashCode();

	Реализация виртуального метода bool Equals (object obj) в классе
System.Object определяет равенство объектов как равенство ссылок на
объекты. Некоторые классы из базовой библиотеки BCL переопределяют метод
Equals(). В классе System.String этот метод переопределен так, что равными
считаются строки, которые совпадают посимвольно. Реализация метода
Equals() в структурном типе DateTime равенство объектов DateTime определяет
как равенство значений.

	В лабораторной работе требуется переопределить метод Equals так,
чтобы объекты считались равными, если равны все данные объектов. Для
класса Person это означает, что равны даты рождения и посимвольно
совпадают строки с именем и фамилией.
	Определение операций == и != должно быть согласовано с
переопределенным методом Equals, т.е. критерии, по которым проверяется
равенство объектов в методе Equals, должны использоваться и при проверке
равенства объектов в операциях == и !=.
	Переопределение виртуального метода int GetHashCode() также должно
быть согласовано с операциями == и !=. Виртуальный метод GetHashCode()
используется некоторыми классами базовой библиотеки, например,
коллекциями-словарями. Классы базовой библиотеки, вызывающие метод
GetHashCode() из пользовательского типа, предполагают, что равным объектам
отвечают равные значения хэш-кодов. Поэтому в случае, когда под равенством
объектов понимается совпадение данных (а не ссылок), реализация метода 
15

	GetHashCode() должна для объектов с совпадающими данными возвращать
равные значения хэш-кодов.

	В классах, указанных в вариантах лабораторной работы, требуется
определить метод object DeepCopy() для создания полной копии объекта.
Определенные в некоторых классах базовой библиотеки методы Clone() и
Copy() создают ограниченную (shallow) копию объекта – при копировании
объекта копии создаются только для полей структурных типов, для полей
ссылочных типов копируются только ссылки. В результате в ограниченной
копии объекта поля-ссылки указывают на те же объекты, что и в исходном
объекте.
	Метод DeepCopy() должен создать полные копии всех объектов, ссылки
на которые содержат поля типа. После создания полная копия не зависит от
исходного объекта - изменение любого поля или свойства исходного объекта
не должно приводить к изменению копии.
	При реализации метода DeepCopy() в классе, который имеет поле типа
System.Collections.ArrayList, следует иметь в виду, что определенные в классе
ArrayList конструктор ArrayList(ICollection) и метод Clone() при создании копии
коллекции, состоящей из элементов ссылочных типов, копируют только ссылки.
	Метод DeepCopy() должен создать как копии элементов коллекции
ArrayList, так и полные копии объектов, на которые ссылаются элементы
коллекции. Для типов, содержащих коллекции, реализация метода DeepCopy()
упрощается, если в типах элементов коллекций также определить метод
DeepCopy().
Вариант 1. Требования к программе
Определить интерфейс
interface IDateAndCopy
 { object DeepCopy();
 DateTime Date { get; set; }
 }


### Всё остальное по заданию 